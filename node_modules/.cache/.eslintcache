[{"/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/index.js":"1","/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/App.js":"2","/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/AddButton/AddButton.jsx":"3","/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/Items/Items.jsx":"4","/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/Navbar/Navbar.jsx":"5","/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/Main/Main.jsx":"6"},{"size":254,"mtime":1681899975045,"results":"7","hashOfConfig":"8"},{"size":220,"mtime":1681899975045,"results":"9","hashOfConfig":"8"},{"size":2967,"mtime":1681899975045,"results":"10","hashOfConfig":"8"},{"size":1729,"mtime":1681899975045,"results":"11","hashOfConfig":"8"},{"size":1498,"mtime":1681899975045,"results":"12","hashOfConfig":"8"},{"size":667,"mtime":1681899975045,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gkjrmj",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/index.js",[],[],"/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/App.js",[],[],"/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/AddButton/AddButton.jsx",["33"],[],"import React, {useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport './addButton.css';\nimport Items from '../Items/Items';\n\nfunction AddButton() {\n    const expirationHour = 0;\n    const expirationMinute = 0;\n    const expirationSecond = 0;\n\n// Calculate the expiration date based on the current date and time\n    const now = new Date();\n    const expirationDate = new Date(\n    now.getFullYear(),\n    now.getMonth(),\n    now.getDate() + 1, // Add one day to the current date\n    expirationHour,\n    expirationMinute,\n    expirationSecond\n    );\n\n    const [show, setShow] = useState(false)\n    const [data, setData] = useState(\"\");\n    const [task, setTask] = useState(() => {\n        const storedTasks = Cookies.get(\"todoTask\");\n        return storedTasks ? JSON.parse(storedTasks) : [];\n      });\n    function handleClick() {\n        setShow(true)\n    }\n\n    function dataHanlder(e) {\n        setData(e.target.value)\n    }\n\n    function listAdder() {\n        const newTask = [...task, {task:data, completed:false}];\n        setTask(newTask);\n        setData(\"\");\n    }\n    function eventHandler(e) {\n        if (e.key === \"Enter\") {\n            const trimmedData = data.trim();\n            setData(trimmedData); \n        if (trimmedData.length === 0){\n             setShow(true);\n                 document.getElementById('warning').style.display=\"block\";\n             }\n            else {\n                listAdder();\n                document.getElementById('warning').style.display=\"none\";\n            }\n        }\n        else if (e.key === \"Escape\"){ \n            document.getElementById('warning').style.display=\"none\";\n            setShow(false); \n            setData(\"\"); \n        }\n    }\n    useEffect( () =>{ \n        Cookies.set(\"todoTask\", JSON.stringify(task), { expires: expirationDate }) \n    }, [task])\n    return (\n        <>\n            <Items list={task} setTask={setTask}/>\n            <div className='d-flex justify-content-center bg-light'>\n                <div className='bg-light button_div d-flex flex-column justify-content-center align-items-center'>\n                    {!show ? (<button className='btn btn-success addition' onClick={handleClick}>\n                        +\n                    </button>) :\n                        (<input type='text' \n                            className='inputText ps-2 pb-2' \n                            placeholder='Enter Your task, \"Press ESC to cancel\"' \n                            value={data} \n                            onChange={dataHanlder} \n                            onKeyDown={eventHandler} \n                            autoFocus\n                        />)}\n                        <div className='col-12 bg-light pb-1 ps-2'>\n                            <span className='text-danger bg-light' id='warning'>Add Something Before Enter</span>\n                        </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\n\n\nexport default AddButton;\n\n","/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/Items/Items.jsx",[],[],"/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/Navbar/Navbar.jsx",[],[],"/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/Main/Main.jsx",[],[],{"ruleId":"34","severity":1,"message":"35","line":62,"column":8,"nodeType":"36","endLine":62,"endColumn":14,"suggestions":"37"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'expirationDate'. Either include it or remove the dependency array.","ArrayExpression",["38"],{"desc":"39","fix":"40"},"Update the dependencies array to be: [expirationDate, task]",{"range":"41","text":"42"},[1834,1840],"[expirationDate, task]"]