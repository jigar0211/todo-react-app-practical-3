{"ast":null,"code":"var _jsxFileName = \"/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/Items/Items.jsx\";\nimport React from 'react';\nimport todoImage from '../Img/todo.png';\nimport './items.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Items(props) {\n  const handleCheck = (event, index) => {\n    const newList = [...props.list];\n    newList[index].completed = newList[index].completed ? false : true;\n    props.setTask(newList);\n  };\n  const isChecked = item => {\n    return item.completed ? \"checked-item\" : \"not-checked-item\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_items-container bg-light mt-3 pe-1 pe-md-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-conatainer bg-light\",\n        children: [props.list.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-light align-items-center justify-content-center d-flex flex-column h-100 w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"not-checked-item pb-3\",\n              children: \" Nothing is added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"bg-light d-block\",\n              src: todoImage,\n              width: \"170.5rem\",\n              height: \"120.5rem\",\n              alt: \"todo list photograph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false), props.list && props.list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list ps-2 pe-3 ps-md-5 pe-md-4 d-flex bg-light justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: isChecked(item),\n            children: item.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: item,\n            type: \"checkbox\",\n            className: \"ps-2 pe-2\",\n            onChange: event => handleCheck(event, index),\n            checked: item.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_c = Items;\nexport default Items;\nvar _c;\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"names":["React","todoImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Items","props","handleCheck","event","index","newList","list","completed","setTask","isChecked","item","children","className","length","fileName","_jsxFileName","lineNumber","columnNumber","src","width","height","alt","map","task","value","type","onChange","checked","_c","$RefreshReg$"],"sources":["/home/jigar/Documents/GitHub/todo-react-app-practical-3/src/components/Items/Items.jsx"],"sourcesContent":["import React from 'react';\nimport todoImage from '../Img/todo.png';\nimport './items.css';\n\nfunction Items(props) {\n  const handleCheck = (event, index) => {\n    const newList = [...props.list];\n    newList[index].completed = newList[index].completed ? false: true;\n    props.setTask(newList);\n  };\n\n  const isChecked = (item) => {\n    return item.completed ? \"checked-item\" : \"not-checked-item\";\n  };\n  return ( \n        <>     \n          <div className='main_items-container bg-light mt-3 pe-1 pe-md-0'>\n            <div className='list-conatainer bg-light'>\n                {props.list.length === 0 && (\n                  <>\n                    <div className='bg-light align-items-center justify-content-center d-flex flex-column h-100 w-100'>\n                        <span className='not-checked-item pb-3'> Nothing is added</span>\n                        <img className='bg-light d-block' src={todoImage} width='170.5rem' height='120.5rem' alt='todo list photograph' />\n                    </div>\n                  </>  \n                )}\n              \n              {props.list && props.list.map((item, index) => (\n                <div key={index} \n                  className='list ps-2 pe-3 ps-md-5 pe-md-4 d-flex bg-light justify-content-between'>\n                    \n                    <span className={isChecked(item)}>\n                      {item.task}\n                    </span>\n\n                    <input value={item}\n                      type=\"checkbox\"\n                      className='ps-2 pe-2'\n                      onChange={(event) => handleCheck(event, index)} \n                      checked={item.completed}/>    \n                </div>\n              ))}\n            </div>\n          </div>\n        </> \n    );\n}\n\nexport default Items;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACpC,MAAMC,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACK,IAAI,CAAC;IAC/BD,OAAO,CAACD,KAAK,CAAC,CAACG,SAAS,GAAGF,OAAO,CAACD,KAAK,CAAC,CAACG,SAAS,GAAG,KAAK,GAAE,IAAI;IACjEN,KAAK,CAACO,OAAO,CAACH,OAAO,CAAC;EACxB,CAAC;EAED,MAAMI,SAAS,GAAIC,IAAI,IAAK;IAC1B,OAAOA,IAAI,CAACH,SAAS,GAAG,cAAc,GAAG,kBAAkB;EAC7D,CAAC;EACD,oBACMV,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAKe,SAAS,EAAC,iDAAiD;MAAAD,QAAA,eAC9Dd,OAAA;QAAKe,SAAS,EAAC,0BAA0B;QAAAD,QAAA,GACpCV,KAAK,CAACK,IAAI,CAACO,MAAM,KAAK,CAAC,iBACtBhB,OAAA,CAAAE,SAAA;UAAAY,QAAA,eACEd,OAAA;YAAKe,SAAS,EAAC,mFAAmF;YAAAD,QAAA,gBAC9Fd,OAAA;cAAMe,SAAS,EAAC,uBAAuB;cAAAD,QAAA,EAAC;YAAiB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO,eAChEpB,OAAA;cAAKe,SAAS,EAAC,kBAAkB;cAACM,GAAG,EAAEvB,SAAU;cAACwB,KAAK,EAAC,UAAU;cAACC,MAAM,EAAC,UAAU;cAACC,GAAG,EAAC;YAAsB;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAChH,iBAET,EAEFhB,KAAK,CAACK,IAAI,IAAIL,KAAK,CAACK,IAAI,CAACgB,GAAG,CAAC,CAACZ,IAAI,EAAEN,KAAK,kBACxCP,OAAA;UACEe,SAAS,EAAC,wEAAwE;UAAAD,QAAA,gBAEhFd,OAAA;YAAMe,SAAS,EAAEH,SAAS,CAACC,IAAI,CAAE;YAAAC,QAAA,EAC9BD,IAAI,CAACa;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACL,eAEPpB,OAAA;YAAO2B,KAAK,EAAEd,IAAK;YACjBe,IAAI,EAAC,UAAU;YACfb,SAAS,EAAC,WAAW;YACrBc,QAAQ,EAAGvB,KAAK,IAAKD,WAAW,CAACC,KAAK,EAAEC,KAAK,CAAE;YAC/CuB,OAAO,EAAEjB,IAAI,CAACH;UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA,GAXtBb,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAahB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACL;AAEX;AAACW,EAAA,GA1CQ5B,KAAK;AA4Cd,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}